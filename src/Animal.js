/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Animal({ ...props }) {
  const group = useRef()
  const animal = useRef();
  useFrame(() =>{ animal.current.rotation.y += 0.01;
  })
  const { nodes, materials, animations } = useGLTF('/Alien+Animal+Actions_Baked_BGE.glb')
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Low_Poly">
        <group name="Armature"   ref={animal}>
          <primitive object={nodes.Bone023} />
          <skinnedMesh  name="aa_low001" geometry={nodes.aa_low001.geometry} material={materials['Material.005']} skeleton={nodes.aa_low001.skeleton} />
          <group name="aa_low002"   ref={animal}>
            <skinnedMesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials['Material.003']} skeleton={nodes.Cube001.skeleton} />
            <skinnedMesh name="Cube001_1" geometry={nodes.Cube001_1.geometry} material={materials['Material.004']} skeleton={nodes.Cube001_1.skeleton} />
          </group>
          <group name="Sphere" >
            <skinnedMesh name="Sphere002" geometry={nodes.Sphere002.geometry} material={materials.Material} skeleton={nodes.Sphere002.skeleton} />
            <skinnedMesh name="Sphere002_1" geometry={nodes.Sphere002_1.geometry} material={materials['Material.001']} skeleton={nodes.Sphere002_1.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Alien+Animal+Actions_Baked_BGE.glb')
